<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.imagej</groupId>
		<artifactId>pom-imagej</artifactId>
		<version>13.0.0</version>
		<relativePath/>
	</parent>

	<groupId>com.github.fgrsnau</groupId>
	<artifactId>paramaxflow</artifactId>
	<version>1.0.0</version>

	<name>ParaMaxFlow</name>
	<description>A Maven project for parametric max-flow segmentation.</description>

	<properties>
		<scijava.jvm.version>1.7</scijava.jvm.version>
		<paramaxflow-jni.version>1.0.0-SNAPSHOT</paramaxflow-jni.version>
		<maxflow-jni.version>1.0-SNAPSHOT</maxflow-jni.version>
	</properties>

	<developers>
		<developer>
			<id>jug</id>
			<name>Florian Jug</name>
			<email>florian.jug@gmail.com</email>
			<organization>MPI-CBG</organization>
			<organizationUrl>http://mpi-cbg.de/</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/fgrsnau/ParaMaxFlow</url>
	</scm>

	<dependencies>
		<!-- imglib2 -->
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>imglib2</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>imglib2-roi</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>imglib2-ij</artifactId>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>imglib2-ui</artifactId>
		</dependency>

		<!-- fiji -->
		<dependency>
			<groupId>io.scif</groupId>
			<artifactId>scifio</artifactId>
		</dependency>
		<dependency>
			<groupId>sc.fiji</groupId>
			<artifactId>Trainable_Segmentation</artifactId>
			<version>2.3.0</version>
		</dependency>

		<!-- Some 3rd party dependencies. -->
		<dependency>
			<groupId>com.github.yannrichet</groupId>
			<artifactId>JMathPlot</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>de.erichseifert.vectorgraphics2d</groupId>
			<artifactId>VectorGraphics2D</artifactId>
			<version>0.9.3</version>
		</dependency>
		<dependency>
			<groupId>de.erichseifert.gral</groupId>
			<artifactId>gral-core</artifactId>
			<version>0.10</version>
		</dependency>

		<!-- Local dependencies, not yet published on any maven repository. -->
		<dependency>
			<!--
				download and install pom from:

				https://github.com/fjug/IDDEA
			 -->
			<groupId>InteractiveDisplay</groupId>
			<artifactId>InteractiveDisplay</artifactId>
			<version>1.0-SNAPSHOT</version>
			<exclusions>
				<!-- Mismatching dependency version, maven-enforcer-plugin is complaining.
				     This should probably fixed upstream.
				-->
				<exclusion>
					<groupId>ch.randelshofer</groupId>
					<artifactId>quaqua</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.imglib2</groupId>
					<artifactId>imglib2-algorithms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>gov.nih.imagej</groupId>
					<artifactId>imagej</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>bcel</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xalan</groupId>
					<artifactId>xalan</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
				<exclusion>
					<groupId>edu.ucar</groupId>
					<artifactId>netcdf</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!--
				download and install pom from:

				https://github.com/tpietzsch/paramaxflow-jni
			-->
			<groupId>net.imglib2</groupId>
			<artifactId>paramaxflow-jni</artifactId>
			<version>${paramaxflow-jni.version}</version>
			<type>nar</type>
		</dependency>
		<dependency>
			<!--
				download and install pom from:

				https://github.com/fgrsnau/maxflow-jni
			-->
			<groupId>com.github.fgrsnau</groupId>
			<artifactId>maxflow-jni</artifactId>
			<version>${maxflow-jni.version}</version>
			<type>nar</type>
		</dependency>

		<!--
			Runtime dependencies (copied by maven-dependency-plugin, contains native libraries).

			Normally, we would like to include the JNI library for all targeted platforms. During development
			just remove the unnecessary/unavailable runtime dependencies.
		-->
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>paramaxflow-jni</artifactId>
			<version>${paramaxflow-jni.version}</version>
			<classifier>i386-Linux-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>paramaxflow-jni</artifactId>
			<version>${paramaxflow-jni.version}</version>
			<classifier>amd64-Linux-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>paramaxflow-jni</artifactId>
			<version>${paramaxflow-jni.version}</version>
			<classifier>x86-Windows-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>paramaxflow-jni</artifactId>
			<version>${paramaxflow-jni.version}</version>
			<classifier>amd64-Windows-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>paramaxflow-jni</artifactId>
			<version>${paramaxflow-jni.version}</version>
			<classifier>ppc-MacOSX-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>paramaxflow-jni</artifactId>
			<version>${paramaxflow-jni.version}</version>
			<classifier>x86_64-MacOSX-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<!-- Another one -->
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>maxflow-jni</artifactId>
			<version>${maxflow-jni.version}</version>
			<classifier>i386-Linux-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>maxflow-jni</artifactId>
			<version>${maxflow-jni.version}</version>
			<classifier>amd64-Linux-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>maxflow-jni</artifactId>
			<version>${maxflow-jni.version}</version>
			<classifier>x86-Windows-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>maxflow-jni</artifactId>
			<version>${maxflow-jni.version}</version>
			<classifier>amd64-Windows-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>maxflow-jni</artifactId>
			<version>${maxflow-jni.version}</version>
			<classifier>ppc-MacOSX-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
		<dependency>
			<groupId>net.imglib2</groupId>
			<artifactId>maxflow-jni</artifactId>
			<version>${maxflow-jni.version}</version>
			<classifier>x86_64-MacOSX-gpp-jni</classifier>
			<scope>runtime</scope>
			<type>nar</type>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>imagej.public</id>
			<url>http://maven.imagej.net/content/groups/public</url>
		</repository>
		<repository>
			<id>erichseifert.de</id>
			<url>http://mvn.erichseifert.de/maven2</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<!--
				The nar-maven-plugin is not executed, but by setting extensions=true it will automatically handle
				*.nar files (otherwise javac would not load the necessary classes).
			-->
			<plugin>
				<groupId>com.github.maven-nar</groupId>
				<artifactId>nar-maven-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>

			<!--
				Copy all the dependencies to a dedicated directory. This way, we can distribute the our final *.jar file
				and the lib/-directory.
			-->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${project.build.directory}/lib</outputDirectory>
				</configuration>
			</plugin>

			<!--
				Create *.jar-file, add manifest (main class and classapth, see maven-dependency-plugin).
			-->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>ParaMaxFlow_</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!--
				The "paramaxflow-jni" artifact has groupId "net.imglib2" but no stable release yet (only snapshot).
				The maven-enforcer-plugin of the parent pom is complaining, because it disallows snapshot for this
				group id. The following plugin definition overrides this rule.

				FIXME: Can we do this in a sane way? Is there a disable-flag for rules?
			-->
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-rules</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireReproducibleBuilds
										implementation="org.scijava.maven.plugin.RequireReproducibleBuilds">
									<groupIds combine.self="override">dummy</groupIds>
								</requireReproducibleBuilds>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
